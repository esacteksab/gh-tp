# These settings are synced to GitHub by https://probot.github.io/apps/settings/

repository:
  # See https://docs.github.com/en/rest/reference/repos#update-a-repository for all available settings.

  # The name of the repository. Changing this will rename the repository
  name: gh-tp

  # A short description of the repository that will show up on GitHub
  description: A GitHub CLI Extension to Submit Pull Requests from tofu/terraform plan output.

  # A URL with more information about the repository
  #homepage: https://example.github.io/

  # A comma-separated list of topics to set on the repository
  #topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: false

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: false

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow squash-merging pull requests, or `false` to prevent
  # squash-merging.
  allow_squash_merge: true
  squash_merge_commit_title: PR_TITLE
  # Either `true` to allow merging pull requests with a merge commit, or `false`
  # to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent
  # rebase-merging.
  allow_rebase_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable
  # automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable
  # vulnerability alerts.
  enable_vulnerability_alerts: true

# Labels: define labels for Issues and Pull Requests
labels:
  - name: 'topic: UX'
    color: '#99cc99'
  - name: 'topic: UI' 
    color: '#FFC0CB'
    description: 'Aesthetics üíÖ'
  - name: question
    color: '#ff00ff'
    description: "Question ‚ùì"
  - name: dependencies
    color: '#cfe2f3'
  - name: 'severity: 1'
    color: '#ff4c4c'
    description: 'The Worst ‚ò¢'
  - name: 'severity: 2'
    color: '#ff7f7f'
    description: 'Really Bad ‚ö†'
  - name: 'severity: 3'
    color: '#ffb2b2'
  - name: 'severity: 4'
    color: '#ffe5e5'
  - name: 'priority: core functionality'
    color: '#ffa500'
  - name: 'priority: nice to have'
    color: '#ffb732'
  - name: 'priority: critical'
    color: '#ffc966'
  - name: 'priority: high'
    color: '#ffdb99'
  - name: 'priority: medium'
    color: '#ffedcc'
  - name: 'priority: low'
    color: '#fff6e5'
  - name: 'type: bug'
    color: '#ff4c4c'
  - name: 'type: chore'
    color: '#ff7f7f'
  - name: 'type: documentation'
    color: '#ffa500'
  - name: 'type: feature'
    color: '#ffb732'
  - name: 'type: build'
    color: '#666666'
  - name: 'type: breaking'
    color: '#c305d9'
  - name: 'type: dependencies'
    color: '#6ae2da'
  - name: 'type: refactor'
    color: '#7e709c'
  - name: 'type: release'
    color: '#97dbed'
  - name: 'type: task'
    color: '#674ea7'
  - name: 'type: regression'
    color: '#bf9000'
    description: 'Oops üí©'
  - name: 'status: WIP'
    color: '#7f7fff'
  - name: 'status: wontfix'
    color: '#e5e5ff'
    description: "Won't Do ‚õî"
  - name: 'status: waiting on others'
    color: '#3232ff'
  - name: 'status: abandoned'
    color: '#6666ff'
  - name: 'status: duplicate'
    color: '#9999ff'
  - name: 'topic: testing'
    color: '#66b266'
  - name: 'type: bug'
    color: CC0000
    description: An issue with the system üêõ.

# Milestones: define milestones for Issues and Pull Requests
milestones:
  - title: v0.0.1
    description: A smidge past initial release.
#    # The state of the milestone. Either `open` or `closed`
    state: open
  - title: v0.1.0
    description: I can show my face.
    state: open

# Collaborators: give specific users access to this repository.
# See https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator for available options
collaborators:
  # - username: bkeepers
  #   permission: push
  # - username: hubot
  #   permission: pull

  # Note: `permission` is only valid on organization-owned repositories.
  # The permission to grant the collaborator. Can be one of:
  # * `pull` - can pull, but not push to or administer this repository.
  # * `push` - can pull and push, but not administer this repository.
  # * `admin` - can pull, push and administer this repository.
  # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.

# See https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions for available options

branches:
  - name: main
    # https://docs.github.com/en/rest/reference/repos#update-branch-protection
    # Branch Protection settings. Set to null to disable
    protection:
      # Required. Require at least one approving review on a pull request, before merging. Set to null to disable.
      required_pull_request_reviews:
        # The number of approvals required. (1-6)
        required_approving_review_count: 1
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Blocks merge until code owners have reviewed.
        require_code_owner_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable. User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        dismissal_restrictions:
          users: []
          teams: []
      # Required. Require status checks to pass before merging. Set to null to disable
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. The list of status checks to require in order to merge into this branch
      #  contexts: []
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to null to disable.
      enforce_admins: true
      # Prevent merge commits from being pushed to matching branches
      required_linear_history: true
      require_signature: true
      allow_deletions: false
      allow_force_pushes: false
      # Required. Restrict who can push to this branch. Team and user restrictions are only available for organization-owned repositories. Set to null to disable.
      restrictions:
        apps: null
        users: null
        teams: null
  - name: develop
    protection:
      required_pull_request_reviews:
        required_approving_review_count: 1
        dismiss_stale_reviews: true
        require_code_owner_reviews: true
        enforce_admins: true
        required_linear_history: true
        restrictions:
          apps: null
          users: null
          teams: null
